{
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "API for McMocknald Order Kiosk System - A priority queue based order management system\nSupports VIP and Regular customers with automated cook bot assignment",
        "title": "McMocknald Order Kiosk API",
        "contact": {
            "name": "API Support",
            "email": "support@mcmocknald.com"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/api/cooks": {
            "get": {
                "description": "Get all cook bots (optionally including deleted ones)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cooks"
                ],
                "summary": "Get all cook bots",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Include deleted cooks",
                        "name": "include_deleted",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.User"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new cook bot to process orders",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cooks"
                ],
                "summary": "Create a new cook bot",
                "parameters": [
                    {
                        "description": "Cook creation request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.CreateCookRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/domain.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/cooks/{id}": {
            "delete": {
                "description": "Soft delete a cook bot and return their order to queue",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cooks"
                ],
                "summary": "Remove a cook bot",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Cook ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/cooks/{id}/accept": {
            "post": {
                "description": "Cook accepts the next order from the queue",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cooks"
                ],
                "summary": "Accept an order",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Cook ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Order"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/cooks/{id}/reinstate": {
            "post": {
                "description": "Reinstate a soft-deleted cook bot",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cooks"
                ],
                "summary": "Reinstate a cook bot",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Cook ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/orders": {
            "post": {
                "description": "Create a new order for a customer (Regular or VIP)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orders"
                ],
                "summary": "Create a new order",
                "parameters": [
                    {
                        "description": "Order creation request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.CreateOrderRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/domain.Order"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/orders/stats": {
            "get": {
                "description": "Get completed and incomplete order counts",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orders"
                ],
                "summary": "Get order statistics",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.OrderStatsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/orders/{id}": {
            "get": {
                "description": "Get an order by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orders"
                ],
                "summary": "Get an order by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Order ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Order"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.Food": {
            "type": "object",
            "required": [
                "name",
                "type"
            ],
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "modified_at": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/domain.FoodType"
                }
            }
        },
        "domain.FoodType": {
            "type": "string",
            "enum": [
                "Food",
                "Drink",
                "Dessert"
            ],
            "x-enum-varnames": [
                "FoodTypeFood",
                "FoodTypeDrink",
                "FoodTypeDessert"
            ]
        },
        "domain.Order": {
            "type": "object",
            "properties": {
                "assigned_cook_user": {
                    "description": "Foreign key to User (Cook)",
                    "type": "integer"
                },
                "cook_name": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "customer_name": {
                    "description": "Additional fields for enriched responses (not in DB)",
                    "type": "string"
                },
                "customer_role": {
                    "$ref": "#/definitions/domain.RoleType"
                },
                "deleted_at": {
                    "type": "string"
                },
                "foods": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.Food"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "modified_at": {
                    "type": "string"
                },
                "ordered_by": {
                    "description": "Foreign key to User (Customer)",
                    "type": "integer"
                },
                "status": {
                    "$ref": "#/definitions/domain.OrderStatus"
                }
            }
        },
        "domain.OrderStatus": {
            "type": "string",
            "enum": [
                "PENDING",
                "SERVING",
                "COMPLETE"
            ],
            "x-enum-varnames": [
                "OrderStatusPending",
                "OrderStatusServing",
                "OrderStatusComplete"
            ]
        },
        "domain.RoleType": {
            "type": "string",
            "enum": [
                "Regular Customer",
                "VIP Customer",
                "Cook"
            ],
            "x-enum-varnames": [
                "RoleRegularCustomer",
                "RoleVIPCustomer",
                "RoleCook"
            ]
        },
        "domain.User": {
            "type": "object",
            "required": [
                "name",
                "role"
            ],
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "description": "Soft delete support",
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "modified_at": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/domain.RoleType"
                }
            }
        },
        "handler.CreateCookRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "handler.CreateOrderRequest": {
            "type": "object",
            "required": [
                "customer_id",
                "food_ids"
            ],
            "properties": {
                "customer_id": {
                    "type": "integer"
                },
                "food_ids": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "handler.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "handler.OrderStatsResponse": {
            "type": "object",
            "properties": {
                "completed": {
                    "type": "integer"
                },
                "incomplete": {
                    "type": "integer"
                },
                "queue_size": {
                    "type": "integer"
                }
            }
        },
        "handler.SuccessResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        }
    },
    "tags": [
        {
            "description": "Order management endpoints",
            "name": "orders"
        },
        {
            "description": "Cook management endpoints",
            "name": "cooks"
        }
    ]
}